//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaFramework_WebManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaFramework.WebManager), typeof(Manager));
		L.RegFunction("EnableWKWebView", EnableWKWebView);
		L.RegFunction("OpenURL", OpenURL);
		L.RegFunction("CloseURL", CloseURL);
		L.RegFunction("EvaluateJS", EvaluateJS);
		L.RegFunction("SetMargins", SetMargins);
		L.RegFunction("SetVisible", SetVisible);
		L.RegFunction("ClearCookies", ClearCookies);
		L.RegFunction("QueryProgress", QueryProgress);
		L.RegFunction("OnShopClick", OnShopClick);
		L.RegFunction("OnShopClickLoadURL", OnShopClickLoadURL);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableWKWebView(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.EnableWKWebView(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenURL(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
			UnityEngine.Transform arg5 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 7);
			obj.OpenURL(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseURL(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.CloseURL(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EvaluateJS(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.EvaluateJS(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMargins(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 6);
			bool arg5 = LuaDLL.luaL_checkboolean(L, 7);
			obj.SetMargins(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetVisible(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearCookies(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.ClearCookies(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int QueryProgress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.QueryProgress(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnShopClick(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.OnShopClick(arg0);
				return 0;
			}
			else if (count == 3)
			{
				LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.OnShopClick(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaFramework.WebManager.OnShopClick");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnShopClickLoadURL(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.WebManager obj = (LuaFramework.WebManager)ToLua.CheckObject<LuaFramework.WebManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnShopClickLoadURL(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

