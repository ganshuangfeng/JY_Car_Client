//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class HighlightingSystem_HighlighterWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(HighlightingSystem.Highlighter), typeof(HighlightingSystem.HighlighterCore));
		L.RegFunction("Hover", Hover);
		L.RegFunction("ConstantOn", ConstantOn);
		L.RegFunction("ConstantOff", ConstantOff);
		L.RegFunction("ConstantSwitch", ConstantSwitch);
		L.RegFunction("ConstantOnImmediate", ConstantOnImmediate);
		L.RegFunction("ConstantOffImmediate", ConstantOffImmediate);
		L.RegFunction("ConstantSwitchImmediate", ConstantSwitchImmediate);
		L.RegFunction("Off", Off);
		L.RegFunction("TweenStart", TweenStart);
		L.RegFunction("TweenStop", TweenStop);
		L.RegFunction("TweenSet", TweenSet);
		L.RegFunction("ConstantSet", ConstantSet);
		L.RegFunction("HSVToRGB", HSVToRGB);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("overlay", get_overlay, set_overlay);
		L.RegVar("occluder", get_occluder, set_occluder);
		L.RegVar("tween", get_tween, set_tween);
		L.RegVar("tweenGradient", get_tweenGradient, set_tweenGradient);
		L.RegVar("tweenDuration", get_tweenDuration, set_tweenDuration);
		L.RegVar("tweenDelay", get_tweenDelay, set_tweenDelay);
		L.RegVar("tweenUseUnscaledTime", get_tweenUseUnscaledTime, set_tweenUseUnscaledTime);
		L.RegVar("tweenLoop", get_tweenLoop, set_tweenLoop);
		L.RegVar("tweenEasing", get_tweenEasing, set_tweenEasing);
		L.RegVar("tweenReverse", get_tweenReverse, set_tweenReverse);
		L.RegVar("tweenRepeatCount", get_tweenRepeatCount, set_tweenRepeatCount);
		L.RegVar("constant", get_constant, set_constant);
		L.RegVar("constantColor", get_constantColor, set_constantColor);
		L.RegVar("constantFadeTime", null, set_constantFadeTime);
		L.RegVar("constantFadeInTime", get_constantFadeInTime, set_constantFadeInTime);
		L.RegVar("constantFadeOutTime", get_constantFadeOutTime, set_constantFadeOutTime);
		L.RegVar("constantUseUnscaledTime", get_constantUseUnscaledTime, set_constantUseUnscaledTime);
		L.RegVar("constantEasing", get_constantEasing, set_constantEasing);
		L.RegVar("filterMode", get_filterMode, set_filterMode);
		L.RegVar("filterList", get_filterList, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hover(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.Hover(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConstantOn(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				obj.ConstantOn();
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<float>(L, 2))
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				float arg0 = (float)LuaDLL.lua_tonumber(L, 2);
				obj.ConstantOn(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.Color>(L, 2))
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
				obj.ConstantOn(arg0);
				return 0;
			}
			else if (count == 3)
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				obj.ConstantOn(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: HighlightingSystem.Highlighter.ConstantOn");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConstantOff(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				obj.ConstantOff();
				return 0;
			}
			else if (count == 2)
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.ConstantOff(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: HighlightingSystem.Highlighter.ConstantOff");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConstantSwitch(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				obj.ConstantSwitch();
				return 0;
			}
			else if (count == 2)
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				obj.ConstantSwitch(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: HighlightingSystem.Highlighter.ConstantSwitch");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConstantOnImmediate(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				obj.ConstantOnImmediate();
				return 0;
			}
			else if (count == 2)
			{
				HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
				UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
				obj.ConstantOnImmediate(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: HighlightingSystem.Highlighter.ConstantOnImmediate");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConstantOffImmediate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
			obj.ConstantOffImmediate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConstantSwitchImmediate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
			obj.ConstantSwitchImmediate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Off(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
			obj.Off();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TweenStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
			obj.TweenStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TweenStop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
			obj.TweenStop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TweenSet(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.TweenSet(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConstantSet(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)ToLua.CheckObject<HighlightingSystem.Highlighter>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.ConstantSet(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HSVToRGB(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Color o = HighlightingSystem.Highlighter.HSVToRGB(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_overlay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool ret = obj.overlay;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overlay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_occluder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool ret = obj.occluder;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index occluder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tween(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool ret = obj.tween;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tween on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenGradient(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			UnityEngine.Gradient ret = obj.tweenGradient;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenGradient on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenDuration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float ret = obj.tweenDuration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenDuration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float ret = obj.tweenDelay;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenDelay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenUseUnscaledTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool ret = obj.tweenUseUnscaledTime;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenUseUnscaledTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenLoop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			HighlightingSystem.LoopMode ret = obj.tweenLoop;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenLoop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenEasing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			HighlightingSystem.Easing ret = obj.tweenEasing;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenEasing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenReverse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool ret = obj.tweenReverse;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenReverse on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenRepeatCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			int ret = obj.tweenRepeatCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenRepeatCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_constant(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool ret = obj.constant;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constant on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_constantColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			UnityEngine.Color ret = obj.constantColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_constantFadeInTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float ret = obj.constantFadeInTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantFadeInTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_constantFadeOutTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float ret = obj.constantFadeOutTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantFadeOutTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_constantUseUnscaledTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool ret = obj.constantUseUnscaledTime;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantUseUnscaledTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_constantEasing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			HighlightingSystem.Easing ret = obj.constantEasing;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantEasing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_filterMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			HighlightingSystem.RendererFilterMode ret = obj.filterMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index filterMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_filterList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			System.Collections.Generic.List<UnityEngine.Transform> ret = obj.filterList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index filterList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_overlay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.overlay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overlay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_occluder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.occluder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index occluder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tween(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.tween = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tween on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenGradient(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			UnityEngine.Gradient arg0 = (UnityEngine.Gradient)ToLua.CheckObject<UnityEngine.Gradient>(L, 2);
			obj.tweenGradient = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenGradient on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenDuration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.tweenDuration = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenDuration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.tweenDelay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenDelay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenUseUnscaledTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.tweenUseUnscaledTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenUseUnscaledTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenLoop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			HighlightingSystem.LoopMode arg0 = (HighlightingSystem.LoopMode)LuaDLL.luaL_checknumber(L, 2);
			obj.tweenLoop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenLoop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenEasing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			HighlightingSystem.Easing arg0 = (HighlightingSystem.Easing)LuaDLL.luaL_checknumber(L, 2);
			obj.tweenEasing = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenEasing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenReverse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.tweenReverse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenReverse on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenRepeatCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.tweenRepeatCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenRepeatCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_constant(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.constant = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constant on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_constantColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.constantColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_constantFadeTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.constantFadeTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantFadeTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_constantFadeInTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.constantFadeInTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantFadeInTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_constantFadeOutTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.constantFadeOutTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantFadeOutTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_constantUseUnscaledTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.constantUseUnscaledTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantUseUnscaledTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_constantEasing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			HighlightingSystem.Easing arg0 = (HighlightingSystem.Easing)LuaDLL.luaL_checknumber(L, 2);
			obj.constantEasing = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index constantEasing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_filterMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			HighlightingSystem.Highlighter obj = (HighlightingSystem.Highlighter)o;
			HighlightingSystem.RendererFilterMode arg0 = (HighlightingSystem.RendererFilterMode)LuaDLL.luaL_checknumber(L, 2);
			obj.filterMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index filterMode on a nil value");
		}
	}
}

