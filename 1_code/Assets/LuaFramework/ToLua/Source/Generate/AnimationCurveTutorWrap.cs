//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AnimationCurveTutorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AnimationCurveTutor), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("useIndex", get_useIndex, set_useIndex);
		L.RegVar("AnimationCurves", get_AnimationCurves, set_AnimationCurves);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_useIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimationCurveTutor obj = (AnimationCurveTutor)o;
			int ret = obj.useIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index useIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AnimationCurves(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimationCurveTutor obj = (AnimationCurveTutor)o;
			System.Collections.Generic.List<UnityEngine.AnimationCurve> ret = obj.AnimationCurves;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AnimationCurves on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_useIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimationCurveTutor obj = (AnimationCurveTutor)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.useIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index useIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AnimationCurves(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimationCurveTutor obj = (AnimationCurveTutor)o;
			System.Collections.Generic.List<UnityEngine.AnimationCurve> arg0 = (System.Collections.Generic.List<UnityEngine.AnimationCurve>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.AnimationCurve>));
			obj.AnimationCurves = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AnimationCurves on a nil value");
		}
	}
}

