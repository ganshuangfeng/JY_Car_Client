//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DG_Tweening_Core_Easing_EaseManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("EaseManager");
		L.RegFunction("Evaluate", Evaluate);
		L.RegFunction("ToEaseFunction", ToEaseFunction);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Evaluate(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5)
			{
				DG.Tweening.Tween arg0 = (DG.Tweening.Tween)ToLua.CheckObject<DG.Tweening.Tween>(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				float o = DG.Tweening.Core.Easing.EaseManager.Evaluate(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (count == 6)
			{
				DG.Tweening.Ease arg0 = (DG.Tweening.Ease)LuaDLL.luaL_checknumber(L, 1);
				DG.Tweening.EaseFunction arg1 = (DG.Tweening.EaseFunction)ToLua.CheckDelegate<DG.Tweening.EaseFunction>(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				float arg5 = (float)LuaDLL.luaL_checknumber(L, 6);
				float o = DG.Tweening.Core.Easing.EaseManager.Evaluate(arg0, arg1, arg2, arg3, arg4, arg5);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DG.Tweening.Core.Easing.EaseManager.Evaluate");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToEaseFunction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DG.Tweening.Ease arg0 = (DG.Tweening.Ease)LuaDLL.luaL_checknumber(L, 1);
			DG.Tweening.EaseFunction o = DG.Tweening.Core.Easing.EaseManager.ToEaseFunction(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

